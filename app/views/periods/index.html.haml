- require 'date'
=include_gon

.row
  .span12
    %h2.period
      = "Período #{@dados["period"].number}"
    .btn-group.butt
      = link_to 'Editar período', edit_period_path(@dados["period"]), class: "btn btn-small"
      = link_to 'Deletar período', @dados["period"], method: :delete, data: { confirm: 'Tem certeza que deseja deletar o período?' }, class: "btn btn-small"

    - if @dados["subjects"]
      %table.table.table-striped
        %h4 Calendario Semanal
        %tr
          %th
            - n = 0
            - (Date::DAYNAMES).each do |dayname|
              %th.table-font
                #{dayname},
                %br
                %font{size: "2"} #{(@date+n-1).strftime("%d")}
              - n += 1

        %font{size: "6"}
          = link_to "<", date: @date.prev_week
        %font{size: "6"}
          = link_to ">", date: @date.next_week

        %h3.align-right
          = @date.strftime("%B %Y")

        - @dados["init_times"].each do |init_time|
          %tr
            %th{scope: "row"} #{init_time}
            - n = 0
            - @dados["events"].each do |event|
              - if event.formatted_init_time == init_time
                - while n <= event.weekday
                  = calendar_events(@dados["tests"], event, n)
                  - n += 1
            - while n <= 6
              %td
              - n += 1

        %ul.legenda
          %li
            %span.box.azul
              Prova
          %li
            %span.box.amarelo
              Entrega de trabalho
          %li
            %span.box.verde
              Prova e entrega de trabalho


.row-fluid
  .span12
    %hr
    .span6
      %table.table.table-striped
        %thead
          %tr
            %th= "Disciplinas"
            %th= "Notas"
        %tbody
          - @dados["subjects"].each do |subject|
            %tr
              %td= link_to subject.name, period_subject_path(@dados["period"], subject)
              %td= "#{subject.grade} / #{subject.value}"



    .span6
      %h4 Current Period
      %canvas#canvas{:height => "380", :width => "530"}

:javascript

  var subjectNames = new Array();
  var subjectGrades = new Array();
  var averageGrades = new Array();

  for(var i = 0; i < gon.subjects.length; i++){
   subjectNames.push(gon.subjects[i].name)
   subjectGrades.push(gon.subjects[i].grade)
   averageGrades.push(60)
  };

  data = {
    labels : subjectNames,
    datasets : [
      {
        fillColor : "rgba(100,100,180,0.5)",
        strokeColor : "rgba(100,100,180,1)",
        pointColor : "rgba(100,100,180,1)",
        pointStrokeColor : "#fff",
        data : subjectGrades
      },
      {
        fillColor : "rgba(220,50,50,0.3)",
        strokeColor : "rgba(220,50,50,1)",
        pointColor : "rgba(220,50,50,1)",
        pointStrokeColor : "#fff",
        data : averageGrades
      }
    ]
  }

  var ctx = document.getElementById("canvas").getContext("2d");
  var myNewChart = new Chart(ctx).Line(data);

  var options = {
    scaleOverride   : true,
    scaleSteps      : 10,
    scaleStepWidth  : 10,
    scaleStartValue : 0,
    datasetFill : false
  }

  new Chart(ctx).Line(data, options);


.row
  .span12
    = link_to "Adicionar disciplina", new_period_subject_path(@dados["period"])
    |
    = link_to "Novo período", new_period_path
