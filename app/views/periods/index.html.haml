- require 'date'
=include_gon
%table.table.table-striped
  - @periods.each do |period|
    - if period.current_period
      %h2.period
        = "Período #{period.number}"
      .btn-group.butt
        = link_to 'Editar período', edit_period_path(period), class: "btn btn-small"
        = link_to 'Deletar período', period, method: :delete, data: { confirm: 'Tem certeza que deseja deletar o período?' }, class: "btn btn-small"
    %thead
      %tr
        - if period.current_period
          %th= "Disciplinas"
          %th= "Notas"
    %tbody
      - if period.current_period
        - period.subjects.each do |subject|
          %tr
            %td= link_to subject.name, period_subject_path(period, subject)
            %td= "#{subject.grade} / #{subject.value}"

- @periods.each do |period|
  - if period.current_period
    = link_to "Adicionar disciplina", new_period_subject_path(period)

- if @subjects
  %table.table.table-striped
    %h2 Calendario Semanal
    %tr
      %th
        - (Date::DAYNAMES).each do |dayname|
          %th.table-font #{dayname}
        -#- for n in 0..6 do
          %th #{(Date.today+n).strftime("%A")}
    - @init_times.each do |init_time|
      %tr
        %th{scope: "row"} #{init_time}
        - n = 0
        - @events.each do |event|
          - if event.formatted_init_time == init_time
            - while n <= event.weekday.to_i
              - if event.weekday.to_i == n
                - @subjects.each do |subject|
                  - if subject.id == event.subject_id
                    - x = false
                    - y = false
                    - subject.tests.each do |test|
                      - if test.date.strftime("%U").to_i == Date.today.strftime("%U").to_i
                        - x = true
                        %td.table-align.table-font.azul #{subject.name}
                    - subject.projects.each do |project|
                      - if project.date.strftime("%U").to_i == Date.today.strftime("%U").to_i
                        - y = true
                        %td.table-align.table-font.amarelo #{subject.name}
                    - unless x || y
                      %td.table-font #{subject.name}
              - else
                %td
              - n += 1
    %ul.legenda
      %li
        %span.box.azul
        Prova
      %li
        %span.box.amarelo
        Entrega de Trabalho
    -#%tbody
      - for n in 0..6 do
        %td
          - @events.each do |event|
            - if event.weekday.to_i == (Date.today+n).strftime("%w").to_i
              - @subjects.each do |subject|
                - if subject.id == event.subject_id
                  = link_to subject.name, period_subject_event_path(@period, subject.id, event.id)
              = "#{event.formatted_init_time} - #{event.formatted_final_time}"
              %br

=link_to "Novo período", new_period_path


%hr
%h4 Current Period
%canvas#canvas{:height => "380", :width => "530"}
  
:javascript

  var subjectNames = new Array();
  var subjectGrades = new Array();
  var averageGrades = new Array();

  for(var i = 0; i < gon.subjects.length; i++){
   subjectNames.push(gon.subjects[i].name)
   subjectGrades.push(gon.subjects[i].grade)
   averageGrades.push(60)
  };

  data = {
    labels : subjectNames, 
    datasets : [
      {
        fillColor : "rgba(100,100,180,0.5)",
        strokeColor : "rgba(100,100,180,1)",
        pointColor : "rgba(100,100,180,1)",
        pointStrokeColor : "#fff",
        data : subjectGrades
      },
      {
        fillColor : "rgba(220,50,50,0.3)",
        strokeColor : "rgba(220,50,50,1)",
        pointColor : "rgba(220,50,50,1)",
        pointStrokeColor : "#fff",
        data : averageGrades 
      }
    ]
  }

  var ctx = document.getElementById("canvas").getContext("2d");
  var myNewChart = new Chart(ctx).Line(data);

  var options = {
    scaleOverride   : true,
    scaleSteps      : 10,
    scaleStepWidth  : 10,
    scaleStartValue : 0,
    datasetFill : false
  }
  
  new Chart(ctx).Line(data, options);

